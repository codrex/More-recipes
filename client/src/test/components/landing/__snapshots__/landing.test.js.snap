// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Landing page component  expected to render a modal and a login form when the path is "/login" 1`] = `
<div>
  <Carousel
    className="blur"
  >
    <CallToAction
      push={[Function]}
      signin={[Function]}
      signup={[Function]}
    />
  </Carousel>
  <Modal
    center={true}
    closeBtnClicked={[Function]}
    footer={false}
    id="modal"
    left={false}
    leftBtnText=""
    loading={false}
    onContinueClicked={[Function]}
    openModal={true}
    operationCompleted={false}
    right={false}
    rightBtnText="Login"
    title="Log in to your account"
  >
    <ReduxForm
      loading={false}
      login={[Function]}
    />
    <p
      className="form-text"
    >
      Don't have an account?
      <span
        onClick={[Function]}
        role="button"
        tabIndex="0"
      >
        <b>
          Sign up
        </b>
      </span>
    </p>
  </Modal>
</div>
`;

exports[`Landing page component  expected to render with a modal and a signup form when path is
  "/create-account"  1`] = `
<div>
  <Carousel
    className="blur"
  >
    <CallToAction
      push={[Function]}
      signin={[Function]}
      signup={[Function]}
    />
  </Carousel>
  <Modal
    center={true}
    closeBtnClicked={[Function]}
    footer={false}
    id="modal"
    left={false}
    leftBtnText=""
    loading={false}
    onContinueClicked={[Function]}
    openModal={true}
    operationCompleted={false}
    right={false}
    rightBtnText="Login"
    title="Create an account"
  >
    <ReduxForm
      loading={false}
      signup={[Function]}
    />
    <p
      className="form-text"
    >
      Already have an account?
      <span
        onClick={[Function]}
        role="button"
        tabIndex="0"
      >
        <b>
          Sign in
        </b>
      </span>
    </p>
  </Modal>
</div>
`;

exports[`Landing page component  expected to render without a modal when the path is "/"  1`] = `
<Landing
  actions={
    Object {
      "loginAction": [Function],
      "signupAction": [Function],
    }
  }
  auth={
    Object {
      "authenticated": false,
      "redirectTo": "/recipes",
    }
  }
  history={
    Object {
      "push": [Function],
    }
  }
  loading={false}
  match={
    Object {
      "path": "/",
    }
  }
  success={true}
>
  <div>
    <Carousel
      className=""
    >
      <div
        className="carousel slide "
        data-ride="carousel"
        id="carousel"
      >
        <ol
          className="carousel-indicators"
        >
          <li
            className="active"
            data-slide-to="0"
            data-target="#carousel"
          />
          <li
            data-slide-to="1"
            data-target="#carousel"
          />
        </ol>
        <div
          className="carousel-inner hero"
        >
          <div
            className="carousel-item backdrop active"
          >
            <img
              alt="First slide"
              className="d-block img-fluid"
              src="http://res.cloudinary.com/resycom/image/upload/c_scale,q_53,w_1073/v1515038728/photo-1510693206972-df098062cb71_gxgxnb.jpg"
            />
          </div>
          <div
            className="carousel-item backdrop"
          >
            <img
              alt="First slide"
              className="d-block img-fluid"
              src="https://res.cloudinary.com/resycom/image/upload/c_scale,q_53,w_2543/v1509718851/eaters-collective-132773_izkarh.jpg"
            />
          </div>
          <CallToAction
            push={[Function]}
            signin={[Function]}
            signup={[Function]}
          >
            <div
              className="cta "
            >
              <h1
                className="text-uppercase display-4 col-xs-11 col-sm-10 col-md-8 col-lg-9"
              >
                ​share​ and view ​awesome​ ​and​ ​exciting​ ​​recipes
              </h1>
              <div
                className="cta-btn-wrapper"
              >
                <Button
                  Tag="button"
                  className="btn-primary btn-lg login"
                  dataTarget=""
                  dataToggle=""
                  handleClick={[Function]}
                  href=""
                  id="login"
                  text="Login"
                  type="button"
                >
                  <button
                    className="btn btn-primary btn-lg login"
                    data-dismiss="modal"
                    data-target=""
                    data-toggle=""
                    href=""
                    id="login"
                    onClick={[Function]}
                    type="button"
                  >
                    Login
                  </button>
                </Button>
                <Button
                  Tag="button"
                  className=" btn-secondary btn-lg reg text-white"
                  dataTarget=""
                  dataToggle=""
                  handleClick={[Function]}
                  href=""
                  id="signup"
                  text="Create an account"
                  type="button"
                >
                  <button
                    className="btn  btn-secondary btn-lg reg text-white"
                    data-dismiss="modal"
                    data-target=""
                    data-toggle=""
                    href=""
                    id="signup"
                    onClick={[Function]}
                    type="button"
                  >
                    Create an account
                  </button>
                </Button>
              </div>
            </div>
          </CallToAction>
        </div>
      </div>
    </Carousel>
    <Modal
      center={true}
      closeBtnClicked={[Function]}
      footer={false}
      id="modal"
      left={false}
      leftBtnText=""
      loading={false}
      onContinueClicked={[Function]}
      openModal={false}
      operationCompleted={false}
      right={false}
      rightBtnText="Login"
      title=""
    >
      <div
        aria-hidden="true"
        aria-labelledby="modalLabel"
        className="modal fade"
        data-backdrop="false"
        data-show="true"
        id="modal"
        role="dialog"
        tabIndex="-1"
      >
        <div
          className="modal-dialog"
          role="document"
        >
          <div
            className="modal-content col-xs-12 col-sm-12 col-md-8 col-lg-5"
          >
            <div
              className="modal-header"
            >
              <h5
                className="modal-title text-capitalize display-4"
                id="modalLabel"
              />
              <button
                aria-label="Close"
                className="close"
                data-dismiss="modal"
                onClick={[Function]}
                type="button"
              >
                <span
                  aria-hidden="true"
                >
                  ×
                </span>
              </button>
            </div>
            <div
              className="modal-body"
            />
          </div>
        </div>
      </div>
    </Modal>
  </div>
</Landing>
`;

exports[`Landing page component  should close modal when close button is clicked 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(Landing)
    actions={
      Object {
        "loginAction": [Function],
        "signupAction": [Function],
      }
    }
    auth={
      Object {
        "authenticated": false,
        "redirectTo": "/recipes",
      }
    }
    history={
      Object {
        "push": [Function],
      }
    }
    loading={false}
    match={
      Object {
        "path": "/",
      }
    }
    success={true}
  >
    <Landing
      actions={
        Object {
          "loginAction": [Function],
          "signupAction": [Function],
        }
      }
      auth={
        Object {
          "authenticated": false,
          "redirectTo": "/recipes",
          "token": null,
        }
      }
      history={
        Object {
          "push": [Function],
        }
      }
      loading={true}
      match={
        Object {
          "path": "/",
        }
      }
      success={true}
    >
      <div>
        <Carousel
          className=""
        >
          <div
            className="carousel slide "
            data-ride="carousel"
            id="carousel"
          >
            <ol
              className="carousel-indicators"
            >
              <li
                className="active"
                data-slide-to="0"
                data-target="#carousel"
              />
              <li
                data-slide-to="1"
                data-target="#carousel"
              />
            </ol>
            <div
              className="carousel-inner hero"
            >
              <div
                className="carousel-item backdrop active"
              >
                <img
                  alt="First slide"
                  className="d-block img-fluid"
                  src="http://res.cloudinary.com/resycom/image/upload/c_scale,q_53,w_1073/v1515038728/photo-1510693206972-df098062cb71_gxgxnb.jpg"
                />
              </div>
              <div
                className="carousel-item backdrop"
              >
                <img
                  alt="First slide"
                  className="d-block img-fluid"
                  src="https://res.cloudinary.com/resycom/image/upload/c_scale,q_53,w_2543/v1509718851/eaters-collective-132773_izkarh.jpg"
                />
              </div>
              <CallToAction
                push={[Function]}
                signin={[Function]}
                signup={[Function]}
              >
                <div
                  className="cta "
                >
                  <h1
                    className="text-uppercase display-4 col-xs-11 col-sm-10 col-md-8 col-lg-9"
                  >
                    ​share​ and view ​awesome​ ​and​ ​exciting​ ​​recipes
                  </h1>
                  <div
                    className="cta-btn-wrapper"
                  >
                    <Button
                      Tag="button"
                      className="btn-primary btn-lg login"
                      dataTarget=""
                      dataToggle=""
                      handleClick={[Function]}
                      href=""
                      id="login"
                      text="Login"
                      type="button"
                    >
                      <button
                        className="btn btn-primary btn-lg login"
                        data-dismiss="modal"
                        data-target=""
                        data-toggle=""
                        href=""
                        id="login"
                        onClick={[Function]}
                        type="button"
                      >
                        Login
                      </button>
                    </Button>
                    <Button
                      Tag="button"
                      className=" btn-secondary btn-lg reg text-white"
                      dataTarget=""
                      dataToggle=""
                      handleClick={[Function]}
                      href=""
                      id="signup"
                      text="Create an account"
                      type="button"
                    >
                      <button
                        className="btn  btn-secondary btn-lg reg text-white"
                        data-dismiss="modal"
                        data-target=""
                        data-toggle=""
                        href=""
                        id="signup"
                        onClick={[Function]}
                        type="button"
                      >
                        Create an account
                      </button>
                    </Button>
                  </div>
                </div>
              </CallToAction>
            </div>
          </div>
        </Carousel>
        <Modal
          center={true}
          closeBtnClicked={[Function]}
          footer={false}
          id="modal"
          left={false}
          leftBtnText=""
          loading={false}
          onContinueClicked={[Function]}
          openModal={false}
          operationCompleted={false}
          right={false}
          rightBtnText="Login"
          title=""
        >
          <div
            aria-hidden="true"
            aria-labelledby="modalLabel"
            className="modal fade"
            data-backdrop="false"
            data-show="true"
            id="modal"
            role="dialog"
            tabIndex="-1"
          >
            <div
              className="modal-dialog"
              role="document"
            >
              <div
                className="modal-content col-xs-12 col-sm-12 col-md-8 col-lg-5"
              >
                <div
                  className="modal-header"
                >
                  <h5
                    className="modal-title text-capitalize display-4"
                    id="modalLabel"
                  />
                  <button
                    aria-label="Close"
                    className="close"
                    data-dismiss="modal"
                    onClick={[Function]}
                    type="button"
                  >
                    <span
                      aria-hidden="true"
                    >
                      ×
                    </span>
                  </button>
                </div>
                <div
                  className="modal-body"
                />
              </div>
            </div>
          </div>
        </Modal>
      </div>
    </Landing>
  </Connect(Landing)>
</Provider>
`;
